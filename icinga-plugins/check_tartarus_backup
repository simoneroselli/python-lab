#!/usr/bin/env python
#
# Check Tartarus SFTP backup 
#
# Author ZMo <simoneroselli78@gmail.com>
#
# Nagios plugin for Tartarus.
# Retrieve the configuration automagically from the Tartarus default
# configuration. If the backup is remotely stored on the SFTP server,
# check about its age and notify
#
# Max allowed backup age in seconds.(86400 = 1 day, 604800 = 1 week);
# basically this time is calculated along MAX_AGE_IN_DAYS in the
# '/etc/tartarus/<resource>.conf' value
#
# Usage: make a symlink to the check_tartarus_backup in
# Nagios's style using the backup name.  
# Example: ln -s check_tartarus_backup check_tartarus_mysql

import sys, time, datetime, os, re
import paramiko as p

backup_max_age = 86400
old_print = (backup_max_age / 86400)
today_secs = int(time.time())
print_warn = "TARTARUS BACKUP WARNING: "

# Retrieve backup name instance from the program-name
backup = sys.argv[0].strip('./')
backup = '_'.join(backup.split('_')[2:])
backup = 'tartarus-' + backup

# Backup configuration file
backup_cfg_file = '/etc/tartarus/generic.inc'

# Warning exit
def exitWarn():
    sftp.close()
    transport.close()
    sys.exit(1)

# Check for the remote host
def hostIsUp(server):
    response = os.system("ping -c 1 -W 2 " + server + ">/dev/null 2>&1")
    if response == 0:
        return True

# Age check
def fileIsOld(max_old, today, file_age):
    secs_diff = (today - file_age)
    if secs_diff > max_old:
        return True

# Check whether the configuration file exists
if not os.path.exists(backup_cfg_file):
    print '%s Conf file "%s" not found!' % (print_warn, backup_cfg_file)
    sys.exit(1)
else:
    execfile(backup_cfg_file, globals())
    # SFTP connection setup
    if hostIsUp(STORAGE_FTP_SERVER) != True:
        print '%s server either wrong or unreachable!' % (STORAGE_FTP_SERVER)
        sys.exit(1)
    else:
        transport = p.Transport((STORAGE_FTP_SERVER, 22))
        try:
            transport.connect(username = STORAGE_FTP_USER, password = STORAGE_FTP_PASSWORD)
            sftp = p.SFTPClient.from_transport(transport)
            ftp_file_list = sftp.listdir(path='.')
        except p.AuthenticationException:
            print "%s Wrong credentials for SFTP connection" % (print_warn)
            sys.exit(1)

# Main
backup_file_list = []
for f in ftp_file_list:
    if f.startswith(backup):
        backup_age = sftp.stat(f).st_mtime
        backup_file_list.append(backup_age)
        backup_size = sftp.stat(f).st_size
	
if backup_size == 0:
    print '%s Backup "%s" looks 0 bytes!' % (print_warn, f)
    exitWarn()

if len(backup_file_list) == 0:
    print '%s Backup "%s" not found on the SFTP server ..' % (print_warn, backup)
    exitWarn()
else:
    latest = max(backup_file_list)
    oldest = min(backup_file_list)
    age_outdate = fileIsOld(backup_max_age, today_secs, latest)
    backup_latest = datetime.datetime.fromtimestamp(latest).strftime('%d/%m/%Y')
    backup_oldest = datetime.datetime.fromtimestamp(oldest).strftime('%d/%m/%Y')

    if age_outdate == True:
        print '%s File "%s" is older than %s days (%s)' % (print_warn, backup, old_print, backup_latest)
        exitWarn()
    else:
        print 'OK - Latest backup: "%s" - Oldest backup: "%s"' % (backup_latest, backup_oldest)
    	sftp.close()
    	transport.close()
    	sys.exit(0)
	
